users(user_id: int, username: text, password: text, fname: text, lname: text, account_type: text)
primary key: user_id
constraints:
  - username must be unique
  - account_type must be one of ('Instructor', 'Student')

courses(course_id: int, course_name: text)
primary key: course_id

coursework(coursework_id: int, coursework_name: text, coursework_type: text, course_id: int, due_date: date)
primary key: coursework_id
foreign key: course_id → courses.course_id

assigned_coursework(coursework_id: int, student_id: int, instructor_id: int, submission_date: date, mark: int)
primary key: (coursework_id, student_id)
foreign keys:
  - coursework_id → coursework.coursework_id
  - student_id → users.user_id
  - instructor_id → users.user_id

remark_requests(remark_request_id: int, coursework_id: int, student_id: int, reason: text, status: text)
primary key: remark_request_id
foreign keys:
  - coursework_id → coursework.coursework_id
  - student_id → users.user_id
constraints:
  - status must be one of ('Pending', 'Approved', 'Rejected')

feedback(feedback_id: int, teaching_likes: text, teaching_recommendations: text, lab_likes: text, lab_recommendations: text, instructor_id: int)
primary key: feedback_id
foreign key: instructor_id → users.user_id

users_courses(user_id: int, course_id: int)
primary key: (user_id, course_id)
foreign keys:
  - user_id → users.user_id
  - course_id → courses.course_id
